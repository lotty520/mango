apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'
android {

    lintOptions {
        abortOnError false
    }
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
        }
    }
}


// 不知道为什么，现在需要在集成了mango的应用里面手动集成一下这两个依赖
dependencies {
    implementation "com.squareup.retrofit2:retrofit:2.5.0"
    implementation "com.squareup.okhttp3:logging-interceptor:3.12.0"
}



def site = 'https://github.com/lotty520/mango'
def gitPath = 'https://github.com/lotty520/mango.git'

group = "com.lotty520"
version = "1.6.0"

install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                name 'mango'
                description 'simple http request util based on okhttp && retrofit'
                url site
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'lotty-tj'
                        name 'lotty520'
                        email 'wuh24.tj@gmail.com'
                    }
                }
                scm {
                    connection gitPath
                    developerConnection gitPath
                    url site
                }
            }
        }
    }
}

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    failOnError false
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        name = 'mango'
        websiteUrl = site
        vcsUrl = gitPath
        licenses = ["Apache-2.0"]
        publish = false
    }
}
