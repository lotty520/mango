apply plugin: 'maven'

def isReleaseBuild() {
    return VERSION_NAME.contains("SNAPSHOT") == false
}

def repositoryUrl

if (isReleaseBuild()) {
    println 'RELEASE BUILD'
    repositoryUrl = RELEASE_REPOSITORY_URL
} else {
    println 'SNAPSHOT BUILD'
    repositoryUrl = SNAPSHOT_REPOSITORY_URL
}

afterEvaluate { project ->
    uploadArchives {
        repositories {
            mavenDeployer {
                repository(url: repositoryUrl) {
                    authentication(userName: POM_USERNAME, password: POM_PASSWORD)
                }
                pom.artifactId = POM_ARTIFACT_ID
                pom.project {
                    name POM_NAME
                    groupId POM_GROUP_ID
                    version VERSION_NAME
                    packaging POM_PACKAGING
                    description POM_DESCRIPTION
                    url POM_URL
                    inceptionYear POM_INCEPTION_YEAR

                    scm {
                        url POM_SCM_URL
                        connection POM_SCM_CONNECTION
                        developerConnection POM_SCM_DEV_CONNECTION
                    }

                    licenses {
                        license {
                            name POM_LICENCE_NAME
                            url POM_LICENCE_URL
                            distribution POM_LICENCE_DIST
                        }
                    }

                    developers {
                        developer {
                            id POM_DEVELOPER_ID
                            name POM_DEVELOPER_NAME
                        }
                    }
                }
            }
        }
    }

    task androidJavadocs(type: Javadoc) {
        failOnError false
        source = android.sourceSets.main.java.source
        options {
            links "http://docs.oracle.com/javase/7/docs/api/"
            linksOffline "http://d.android.com/reference", "${android.sdkDirectory}/docs/reference"
        }
        classpath += project.android.libraryVariants.toList().first().javaCompile.classpath
        classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    }

    task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
        classifier = 'javadoc'
        from androidJavadocs.destinationDir
    }

    task androidSourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    artifacts {
        archives androidSourcesJar
        archives androidJavadocsJar
    }
}